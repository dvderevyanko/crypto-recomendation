plugins {
	id 'org.springframework.boot' version '3.1.3'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'java'
	id 'com.bmuschko.docker-spring-boot-application' version '9.3.2'
}

group = 'com.crypto'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '18'

ext {
	mapStructVersion = "1.5.5.Final"
	lombokVersion = "1.18.24"
	lombokBindingVersion = "0.2.0"
	testContainerVersion = "1.19.0"
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// Cache
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// MapStruct
	implementation "org.mapstruct:mapstruct:$project.mapStructVersion"
	implementation "org.projectlombok:lombok-mapstruct-binding:$project.lombokBindingVersion"
	annotationProcessor "org.projectlombok:lombok-mapstruct-binding:$project.lombokBindingVersion"
	annotationProcessor "org.mapstruct:mapstruct-processor:$project.mapStructVersion"

	// Lombok
	implementation "org.projectlombok:lombok:$project.lombokVersion"
	annotationProcessor "org.projectlombok:lombok:$project.lombokVersion"

	//Request limit
	implementation 'com.github.vladimir-bukhtoyarov:bucket4j-core:7.6.0'

	// CSV
	implementation 'org.apache.commons:commons-csv:1.10.0'

	// Swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
}

docker {
	springBootApplication {
		baseImage = 'arm64v8/openjdk:18'
//		baseImage = 'openjdk:18'
		images = ["$project.name:latest"]
	}
}

test {
	useJUnitPlatform()
}

tasks.register('composeUp', Exec) {
	group = "application"
	if (project.hasProperty("withBuild")) {
		dependsOn("dockerBuildImage")
	}
	doFirst {
		commandLine("docker-compose", "up")
	}
}

tasks.register('composeDown', Exec) {
	group = "application"
	doFirst {
		commandLine("docker-compose", "down")
	}
}

tasks.register('composeUpRedis', Exec) {
	group = "application"
	doFirst {
		commandLine("docker-compose", "up", "redis", "redis-commander")
	}
}